{"version":3,"file":"my-lib.cjs","sources":["../src/utils/keys.ts","../src/utils/index.ts","../src/rules/hypeNavigation/anchorKey.ts","../src/rules/hypeNavigation/rules.ts","../src/rules/hypeNavigation/index.ts","../src/rules/mapDeleteBackspace.ts","../src/rules/mapRedoUndoCopyPaste.ts","../src/index.ts"],"sourcesContent":["export const hyper = [\n    \"right_command\",\n    \"right_control\",\n    \"right_shift\",\n    \"right_option\",\n];\n\nexport const hyperExcludeShift = [\n    \"right_command\",\n    \"right_control\",\n    \"right_option\",\n];\n\nexport const modifiers = {\n    ctrl: \"left_control\",\n    cmd: \"left_command\",\n    opt: \"left_option\",\n    shift: \"left_shift\",\n};\nexport const arrowKey = {\n    left: \"left_arrow\",\n    right: \"right_arrow\",\n    up: \"up_arrow\",\n    down: \"down_arrow\",\n};\n","import fs from \"fs\";\nimport { karabinerFromKey, karabinerRule, karabinerToKey } from \"../types\";\nimport { hyper } from \"./keys\";\n\nexport async function getComplexRules<\n    T extends { [index: string]: karabinerToKey },\n    F extends { [index: string]: karabinerFromKey }\n>(\n    to: T,\n    from: F,\n    path: string = `/Users/henry/HH-workspace/dotfile/keyboard/karabiner/scripts/workbench/karabiner-rules/${Date.now()}.json`\n) {\n    const rules: karabinerRule[] = [];\n    Object.keys(from).forEach((key: string) => {\n        const rule = getKarabinerRule(\n            key.split(\".\").join(\"-\"),\n            from[key],\n            to[key]\n        );\n        rules.push(rule);\n    });\n    try {\n        await getJSONFIle(rules, path);\n    } catch (error) {\n        console.log(error);\n    }\n    return rules;\n}\n\nexport function getKarabinerRule(\n    desc: string,\n    fromKey: karabinerFromKey,\n    toKey: karabinerToKey\n): karabinerRule {\n    return {\n        description: desc,\n        from: fromKey,\n        to: toKey,\n        type: \"basic\",\n    };\n}\n\n/**\n * https://stackoverflow.com/a/31777314/10915537\n */\nexport async function getJSONFIle(data: Object, path: string) {\n    await fs.writeFile(\n        path,\n        JSON.stringify(data),\n        { flag: \"wx\" },\n        function (err) {\n            if (err) throw err;\n            console.log(`File saved in ${path}`);\n        }\n    );\n}\n\nexport function getToKey(keycode: string, modifiers: Array<string> = []) {\n    if (modifiers.length === 0) {\n        return {\n            key_code: keycode,\n        };\n    }\n    return {\n        key_code: keycode,\n        modifiers,\n    };\n}\n\nexport function getFromKey(keycode: string, modifiers: Array<string>) {\n    return {\n        key_code: keycode,\n        modifiers: {\n            mandatory: modifiers,\n        },\n    };\n}\n\nexport function getFromKeyWithHyper(keycode: string, modifier: string = \"\") {\n    if (modifier) {\n        return getFromKey(keycode, [...hyper, modifier]);\n    }\n    return getFromKey(keycode, [...hyper]);\n}\n","import { modifiers } from \"../../utils/keys\";\nimport { Anchors } from \"./types\";\n\nexport type PreferKeys = Anchors<string> & {\n    mode: {\n        cursorMove: string;\n        select: string;\n    };\n};\n\nexport const preferKeys: PreferKeys = {\n    mode: {\n        cursorMove: modifiers.opt,\n        select: modifiers.cmd,\n    },\n    char: {\n        cursorMove: {\n            left: \"h\",\n            right: \"l\",\n        },\n        select: {\n            left: \"h\",\n            right: \"l\",\n        },\n    },\n    word: {\n        cursorMove: {\n            left: \"j\",\n            right: \"k\",\n        },\n        select: {\n            left: \"j\",\n            right: \"k\",\n        },\n    },\n    lineX: {\n        cursorMove: {\n            start: \"h\",\n            end: \"l\",\n        },\n        select: {\n            start: \"i\",\n            end: \"o\",\n        },\n    },\n    lineY: {\n        cursorMove: {\n            up: \"k\",\n            down: \"j\",\n        },\n        select: {\n            prev: \"i\",\n            next: \"o\",\n        },\n    },\n    page: {\n        cursorMove: {\n            start: \"u\",\n            end: \"p\",\n        },\n        select: {\n            above: \"u\",\n            below: \"p\",\n        },\n    },\n};\n","import { karabinerFromKey, karabinerToKey } from \"../../types\";\nimport { modifiers, arrowKey } from \"../../utils/keys\";\nimport { preferKeys } from \"./anchorKey\";\nimport { Anchors } from \"./types\";\nimport { getFromKeyWithHyper, getToKey } from \"../../utils/index\";\n\n/** contains a set of keybindings for char/line/page in default keymap */\nexport const originNavigationRules: Anchors<karabinerToKey> = {\n    char: {\n        cursorMove: {\n            left: getToKey(arrowKey.left),\n            right: getToKey(arrowKey.right),\n        },\n        select: {\n            left: getToKey(arrowKey.left, [modifiers.shift]),\n            right: getToKey(arrowKey.right, [modifiers.shift]),\n        },\n    },\n    word: {\n        cursorMove: {\n            left: getToKey(arrowKey.left, [modifiers.opt]),\n            right: getToKey(arrowKey.right, [modifiers.opt]),\n        },\n        select: {\n            left: getToKey(arrowKey.left, [modifiers.shift, modifiers.opt]),\n            right: getToKey(arrowKey.right, [modifiers.shift, modifiers.opt]),\n        },\n    },\n    lineX: {\n        cursorMove: {\n            start: getToKey(arrowKey.left, [modifiers.cmd]),\n            end: getToKey(arrowKey.right, [modifiers.cmd]),\n        },\n        select: {\n            start: getToKey(arrowKey.left, [modifiers.cmd, modifiers.shift]),\n            end: getToKey(arrowKey.right, [modifiers.cmd, modifiers.shift]),\n        },\n    },\n    lineY: {\n        cursorMove: {\n            up: getToKey(arrowKey.up),\n            down: getToKey(arrowKey.down),\n        },\n        select: {\n            prev: getToKey(arrowKey.up, [modifiers.shift]),\n            next: getToKey(arrowKey.down, [modifiers.shift]),\n        },\n    },\n    page: {\n        cursorMove: {\n            start: getToKey(arrowKey.up, [modifiers.cmd]),\n            end: getToKey(arrowKey.down, [modifiers.cmd]),\n        },\n        select: {\n            above: getToKey(arrowKey.up, [modifiers.cmd, modifiers.shift]),\n            below: getToKey(arrowKey.down, [modifiers.cmd, modifiers.shift]),\n        },\n    },\n};\n\n/** contains a set of keybindings for char/line/page in karabiner keymap */\nexport const hyperNavigationRules: Anchors<karabinerFromKey> = {\n    char: {\n        /**hyper+H/L for move cursor left/right, no additional modifier key needed */\n        cursorMove: {\n            left: getFromKeyWithHyper(preferKeys.char.cursorMove.left),\n            right: getFromKeyWithHyper(preferKeys.char.cursorMove.right),\n        },\n        select: {\n            left: getFromKeyWithHyper(\n                preferKeys.char.select.left,\n                preferKeys.mode.select\n            ),\n            right: getFromKeyWithHyper(\n                preferKeys.char.select.right,\n                preferKeys.mode.select\n            ),\n        },\n    },\n    word: {\n        cursorMove: {\n            left: getFromKeyWithHyper(\n                preferKeys.word.cursorMove.left,\n                preferKeys.mode.cursorMove\n            ),\n            right: getFromKeyWithHyper(\n                preferKeys.word.cursorMove.right,\n                preferKeys.mode.cursorMove\n            ),\n        },\n        select: {\n            left: getFromKeyWithHyper(\n                preferKeys.word.cursorMove.left,\n                preferKeys.mode.select\n            ),\n            right: getFromKeyWithHyper(\n                preferKeys.word.cursorMove.right,\n                preferKeys.mode.select\n            ),\n        },\n    },\n    lineX: {\n        cursorMove: {\n            /**hyper+J/K for move cursor up/down, no additional modifier key needed */\n            start: getFromKeyWithHyper(\n                preferKeys.lineX.cursorMove.start,\n                preferKeys.mode.cursorMove\n            ),\n            end: getFromKeyWithHyper(\n                preferKeys.lineX.cursorMove.end,\n                preferKeys.mode.cursorMove\n            ),\n        },\n        select: {\n            start: getFromKeyWithHyper(\n                preferKeys.lineX.select.start,\n                modifiers.opt\n            ),\n            end: getFromKeyWithHyper(\n                preferKeys.lineX.select.end,\n                modifiers.opt\n            ),\n        },\n    },\n    lineY: {\n        select: {\n            prev: getFromKeyWithHyper(\n                preferKeys.lineY.select.prev,\n                preferKeys.mode.select\n            ),\n            next: getFromKeyWithHyper(\n                preferKeys.lineY.select.next,\n                preferKeys.mode.select\n            ),\n        },\n        cursorMove: {\n            up: getFromKeyWithHyper(preferKeys.lineY.cursorMove.up),\n            down: getFromKeyWithHyper(preferKeys.lineY.cursorMove.down),\n        },\n    },\n    page: {\n        cursorMove: {\n            start: getFromKeyWithHyper(\n                preferKeys.page.cursorMove.start,\n                preferKeys.mode.cursorMove\n            ),\n            end: getFromKeyWithHyper(\n                preferKeys.page.cursorMove.end,\n                preferKeys.mode.cursorMove\n            ),\n        },\n        select: {\n            above: getFromKeyWithHyper(\n                preferKeys.page.select.above,\n                preferKeys.mode.select\n            ),\n            below: getFromKeyWithHyper(\n                preferKeys.page.select.below,\n                preferKeys.mode.select\n            ),\n        },\n    },\n};\n","import { getComplexRules } from \"../../utils\";\nimport { hyperNavigationRules, originNavigationRules } from \"./rules\";\nimport flat from \"flat\";\nimport { karabinerFromKey, karabinerToKey } from \"../../types\";\n\nconst from = flat(hyperNavigationRules, { maxDepth: 3 }) as {\n    [index: string]: karabinerFromKey;\n};\nconst to = flat(originNavigationRules, { maxDepth: 3 }) as {\n    [index: string]: karabinerToKey;\n};\n\nexport const hyperNavigation = (\n    path: string = `/Users/henry/HH-workspace/dotfile/keyboard/karabiner/scripts/workbench/karabiner-rules/${Date.now()}.json`\n) => {\n    getComplexRules(to, from, path);\n};\n","/**\n\n| name               | press   | map to        |\n| ------------------ | ------- | ------------- |\n| deleteCharForward  | hyper+n | backspace     |\n| deleteWordForward  | hyper+m | backspace+alt |\n| deleteCharBackward | hyper+, | backspace     |\n| deleteWordBackward | hyper+. | delete+alt    |\n\n */\n\nimport { getComplexRules } from \"../utils\";\nimport { karabinerFromKey, karabinerToKey } from \"../types\";\n\nimport { getToKey, getFromKey } from \"../utils\";\nimport { hyperExcludeShift, modifiers } from \"../utils/keys\";\n\ntype Key =\n    | \"deleteCharForward\"\n    | \"deleteWordForward\"\n    | \"deleteCharBackward\"\n    | \"deleteWordBackward\";\n\nconst to: Record<Key, karabinerToKey> = {\n    deleteCharForward: getToKey(\"delete_or_backspace\"),\n    deleteWordForward: getToKey(\"delete_or_backspace\", [modifiers.opt]),\n    deleteWordBackward: getToKey(\"delete_forward\", [modifiers.opt]),\n    deleteCharBackward: getToKey(\"delete_forward\"),\n};\n\nconst from: Record<Key, karabinerFromKey> = {\n    deleteCharForward: getFromKeyWithHyper(\"n\"),\n    deleteWordForward: getFromKeyWithHyper(\"m\"),\n    deleteWordBackward: getFromKeyWithHyper(\"comma\"),\n    deleteCharBackward: getFromKeyWithHyper(\"period\"),\n};\n\nexport async function mapDeleteBackspace(\n    path: string = `/Users/henry/HH-workspace/dotfile/keyboard/karabiner/scripts/workbench/karabiner-rules/${Date.now()}.json`\n) {\n    getComplexRules(to, from, path);\n}\n\nfunction getFromKeyWithHyper(keycode: string, modifier: string = \"\") {\n    if (modifier) {\n        return getFromKey(keycode, [...hyperExcludeShift, modifier]);\n    }\n    return getFromKey(keycode, [...hyperExcludeShift]);\n}\n","// map cmd + Zzcv to hyper + uiop\n\nimport { getComplexRules, getJSONFIle, getKarabinerRule } from \"../utils\";\nimport { karabinerFromKey, karabinerRule, karabinerToKey } from \"../types\";\n\nimport { getFromKeyWithHyper, getToKey } from \"../utils\";\nimport { modifiers } from \"../utils/keys\";\n\ntype Key = \"undo\" | \"redo\" | \"copy\" | \"paste\";\n\nconst to: Record<Key, karabinerToKey> = {\n    undo: getToKey(\"z\", [modifiers.cmd]),\n    redo: getToKey(\"z\", [modifiers.cmd, modifiers.shift]),\n    copy: getToKey(\"c\", [modifiers.cmd]),\n    paste: getToKey(\"v\", [modifiers.cmd]),\n};\n\nconst from: Record<Key, karabinerFromKey> = {\n    undo: getFromKeyWithHyper(\"i\"),\n    redo: getFromKeyWithHyper(\"u\"),\n    copy: getFromKeyWithHyper(\"o\"),\n    paste: getFromKeyWithHyper(\"p\"),\n};\n\nexport async function mapRedoUndoCopyPaste(\n    path: string = `/Users/henry/HH-workspace/dotfile/keyboard/karabiner/scripts/workbench/karabiner-rules/${Date.now()}.json`\n) {\n    getComplexRules(to, from, path);\n}\n","import { hyperNavigation } from \"./rules/hypeNavigation\";\nimport { mapDeleteBackspace } from \"./rules/mapDeleteBackspace\";\nimport { mapRedoUndoCopyPaste } from \"./rules/mapRedoUndoCopyPaste\";\n\nexport const mapHyperNavigation = hyperNavigation;\nexport const mapUndoRedoCopyPaste = mapRedoUndoCopyPaste;\nexport const mapBackSpaceDelete = mapDeleteBackspace;\n"],"names":["fs","getFromKeyWithHyper","from","flat","to"],"mappings":"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"}