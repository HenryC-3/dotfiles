{"version":3,"file":"my-lib.mjs","sources":["../src/utils/keys.ts","../src/utils/index.ts","../src/profiles/caplock-enhance/hypeNavigation/anchorKey.ts","../src/profiles/caplock-enhance/hypeNavigation/rules.ts","../src/profiles/caplock-enhance/hypeNavigation/index.ts","../src/profiles/palmS/mapArrow.ts","../src/profiles/palmS/mapDeleteBackspace.ts","../src/profiles/caplock-enhance/mapRedoUndoCopyPaste.ts","../src/profiles/thumbs/index.ts","../src/index.ts"],"sourcesContent":["export const hyper = [\n    \"right_command\",\n    \"right_control\",\n    \"right_shift\",\n    \"right_option\",\n];\n\nexport const hyperExcludeShift = [\n    \"right_command\",\n    \"right_control\",\n    \"right_option\",\n];\n\nexport const modifiers = {\n    ctrl: \"left_control\",\n    cmd: \"left_command\",\n    opt: \"left_option\",\n    shift: \"left_shift\",\n};\nexport const arrowKey = {\n    left: \"left_arrow\",\n    right: \"right_arrow\",\n    up: \"up_arrow\",\n    down: \"down_arrow\",\n};\n\nexport const deleteKey = {\n    deleteBackward: \"delete_or_backspace\",\n    deleteForward: \"delete_forward\",\n};\n","import fs from \"fs\";\nimport {\n    karabinerCondition,\n    karabinerFromKey,\n    karabinerRule,\n    karabinerRuleWithCondition,\n    karabinerToKey,\n} from \"../types\";\nimport { hyper } from \"./keys\";\n\nexport function getCustomModifier(keycode: string) {\n    const customModifierName = `${keycode}_modifier`;\n    const rule = {\n        from: {\n            key_code: keycode,\n        },\n        to: [\n            {\n                set_variable: {\n                    name: customModifierName,\n                    value: 1,\n                },\n            },\n        ],\n        to_after_key_up: [\n            {\n                set_variable: {\n                    name: customModifierName,\n                    value: 0,\n                },\n            },\n        ],\n        to_if_alone: [\n            {\n                key_code: keycode,\n            },\n        ],\n        type: \"basic\",\n    };\n    return {\n        rule,\n        modifierName: customModifierName,\n    };\n}\n\nexport async function getComplexRules<\n    T extends { [index: string]: karabinerToKey },\n    F extends { [index: string]: karabinerFromKey }\n>(\n    to: T,\n    from: F,\n    path: string = `/Users/henry/HH-workspace/dotfile/keyboard/karabiner/scripts/workbench/karabiner-rules/${Date.now()}.json`,\n    conditions: Array<karabinerCondition> = []\n) {\n    const rules: karabinerRule[] = [];\n    Object.keys(from).forEach((key: string) => {\n        const rule = getKarabinerRule(\n            key.split(\".\").join(\"-\"),\n            from[key],\n            to[key],\n            conditions\n        );\n        rules.push(rule);\n    });\n    try {\n        await getJSONFIle(rules, path);\n    } catch (error) {\n        console.log(error);\n    }\n    return rules;\n}\n\nexport function getKarabinerRule(\n    desc: string,\n    fromKey: karabinerFromKey,\n    toKey: karabinerToKey,\n    conditions: Array<karabinerCondition> = []\n): karabinerRuleWithCondition {\n    return {\n        description: desc,\n        from: fromKey,\n        to: toKey,\n        type: \"basic\",\n        conditions,\n    };\n}\n\n/**\n * https://stackoverflow.com/a/31777314/10915537\n */\nexport async function getJSONFIle(data: Object, path: string) {\n    await fs.writeFile(\n        path,\n        JSON.stringify(data),\n        { flag: \"wx\" },\n        function (err) {\n            if (err) throw err;\n            console.log(`File saved in ${path}`);\n        }\n    );\n}\n\nexport function getToKey(keycode: string, modifiers: Array<string> = []) {\n    if (modifiers.length === 0) {\n        return {\n            key_code: keycode,\n        };\n    }\n    return {\n        key_code: keycode,\n        modifiers,\n    };\n}\n\nexport function getFromKey(keycode: string, modifiers: Array<string>) {\n    return {\n        key_code: keycode,\n        modifiers: {\n            mandatory: modifiers,\n        },\n    };\n}\n\nexport function getFromKeyWithHyper(keycode: string, modifier: string = \"\") {\n    if (modifier) {\n        return getFromKey(keycode, [...hyper, modifier]);\n    }\n    return getFromKey(keycode, [...hyper]);\n}\n","import { modifiers } from \"../../../utils/keys\";\nimport { Anchors } from \"./types\";\n\nexport type PreferKeys = Anchors<string> & {\n    mode: {\n        cursorMove: string;\n        select: string;\n    };\n};\n\nexport const rightHand: PreferKeys = {\n    mode: {\n        cursorMove: modifiers.opt,\n        select: modifiers.cmd,\n    },\n    char: {\n        cursorMove: {\n            left: \"h\",\n            right: \"l\",\n        },\n        select: {\n            left: \"h\",\n            right: \"l\",\n        },\n    },\n    word: {\n        cursorMove: {\n            left: \"j\",\n            right: \"k\",\n        },\n        select: {\n            left: \"j\",\n            right: \"k\",\n        },\n    },\n    lineX: {\n        cursorMove: {\n            start: \"h\",\n            end: \"l\",\n        },\n        select: {\n            start: \"i\",\n            end: \"o\",\n        },\n    },\n    lineY: {\n        cursorMove: {\n            up: \"k\",\n            down: \"j\",\n        },\n        select: {\n            prev: \"i\",\n            next: \"o\",\n        },\n    },\n    page: {\n        cursorMove: {\n            start: \"u\",\n            end: \"p\",\n        },\n        select: {\n            above: \"u\",\n            below: \"p\",\n        },\n    },\n};\n","import { karabinerFromKey, karabinerToKey } from \"../../../types\";\nimport { modifiers, arrowKey } from \"../../../utils/keys\";\nimport { rightHand } from \"./anchorKey\";\nimport { Anchors } from \"./types\";\nimport { getFromKeyWithHyper, getToKey } from \"../../../utils/index\";\n\n/** contains a set of keybindings for char/line/page in default keymap */\nexport const originNavigationRules: Anchors<karabinerToKey> = {\n    char: {\n        cursorMove: {\n            left: getToKey(arrowKey.left),\n            right: getToKey(arrowKey.right),\n        },\n        select: {\n            left: getToKey(arrowKey.left, [modifiers.shift]),\n            right: getToKey(arrowKey.right, [modifiers.shift]),\n        },\n    },\n    word: {\n        cursorMove: {\n            left: getToKey(arrowKey.left, [modifiers.opt]),\n            right: getToKey(arrowKey.right, [modifiers.opt]),\n        },\n        select: {\n            left: getToKey(arrowKey.left, [modifiers.shift, modifiers.opt]),\n            right: getToKey(arrowKey.right, [modifiers.shift, modifiers.opt]),\n        },\n    },\n    lineX: {\n        cursorMove: {\n            start: getToKey(arrowKey.left, [modifiers.cmd]),\n            end: getToKey(arrowKey.right, [modifiers.cmd]),\n        },\n        select: {\n            start: getToKey(arrowKey.left, [modifiers.cmd, modifiers.shift]),\n            end: getToKey(arrowKey.right, [modifiers.cmd, modifiers.shift]),\n        },\n    },\n    lineY: {\n        cursorMove: {\n            up: getToKey(arrowKey.up),\n            down: getToKey(arrowKey.down),\n        },\n        select: {\n            prev: getToKey(arrowKey.up, [modifiers.shift]),\n            next: getToKey(arrowKey.down, [modifiers.shift]),\n        },\n    },\n    page: {\n        cursorMove: {\n            start: getToKey(arrowKey.up, [modifiers.cmd]),\n            end: getToKey(arrowKey.down, [modifiers.cmd]),\n        },\n        select: {\n            above: getToKey(arrowKey.up, [modifiers.cmd, modifiers.shift]),\n            below: getToKey(arrowKey.down, [modifiers.cmd, modifiers.shift]),\n        },\n    },\n};\n\n/** contains a set of keybindings for char/line/page in karabiner keymap */\nexport const hyperNavigationRules: Anchors<karabinerFromKey> = {\n    char: {\n        /**hyper+H/L for move cursor left/right, no additional modifier key needed */\n        cursorMove: {\n            left: getFromKeyWithHyper(rightHand.char.cursorMove.left),\n            right: getFromKeyWithHyper(rightHand.char.cursorMove.right),\n        },\n        select: {\n            left: getFromKeyWithHyper(\n                rightHand.char.select.left,\n                rightHand.mode.select\n            ),\n            right: getFromKeyWithHyper(\n                rightHand.char.select.right,\n                rightHand.mode.select\n            ),\n        },\n    },\n    word: {\n        cursorMove: {\n            left: getFromKeyWithHyper(\n                rightHand.word.cursorMove.left,\n                rightHand.mode.cursorMove\n            ),\n            right: getFromKeyWithHyper(\n                rightHand.word.cursorMove.right,\n                rightHand.mode.cursorMove\n            ),\n        },\n        select: {\n            left: getFromKeyWithHyper(\n                rightHand.word.cursorMove.left,\n                rightHand.mode.select\n            ),\n            right: getFromKeyWithHyper(\n                rightHand.word.cursorMove.right,\n                rightHand.mode.select\n            ),\n        },\n    },\n    lineX: {\n        cursorMove: {\n            /**hyper+J/K for move cursor up/down, no additional modifier key needed */\n            start: getFromKeyWithHyper(\n                rightHand.lineX.cursorMove.start,\n                rightHand.mode.cursorMove\n            ),\n            end: getFromKeyWithHyper(\n                rightHand.lineX.cursorMove.end,\n                rightHand.mode.cursorMove\n            ),\n        },\n        select: {\n            start: getFromKeyWithHyper(\n                rightHand.lineX.select.start,\n                modifiers.opt\n            ),\n            end: getFromKeyWithHyper(rightHand.lineX.select.end, modifiers.opt),\n        },\n    },\n    lineY: {\n        select: {\n            prev: getFromKeyWithHyper(\n                rightHand.lineY.select.prev,\n                rightHand.mode.select\n            ),\n            next: getFromKeyWithHyper(\n                rightHand.lineY.select.next,\n                rightHand.mode.select\n            ),\n        },\n        cursorMove: {\n            up: getFromKeyWithHyper(rightHand.lineY.cursorMove.up),\n            down: getFromKeyWithHyper(rightHand.lineY.cursorMove.down),\n        },\n    },\n    page: {\n        cursorMove: {\n            start: getFromKeyWithHyper(\n                rightHand.page.cursorMove.start,\n                rightHand.mode.cursorMove\n            ),\n            end: getFromKeyWithHyper(\n                rightHand.page.cursorMove.end,\n                rightHand.mode.cursorMove\n            ),\n        },\n        select: {\n            above: getFromKeyWithHyper(\n                rightHand.page.select.above,\n                rightHand.mode.select\n            ),\n            below: getFromKeyWithHyper(\n                rightHand.page.select.below,\n                rightHand.mode.select\n            ),\n        },\n    },\n};\n","import { getComplexRules } from \"../../../utils\";\nimport { hyperNavigationRules, originNavigationRules } from \"./rules\";\nimport flat from \"flat\";\nimport { karabinerFromKey, karabinerToKey } from \"../../../types\";\n\nconst from = flat(hyperNavigationRules, { maxDepth: 3 }) as {\n    [index: string]: karabinerFromKey;\n};\nconst to = flat(originNavigationRules, { maxDepth: 3 }) as {\n    [index: string]: karabinerToKey;\n};\n\nexport const hyperNavigation = (\n    path: string = `/Users/henry/HH-workspace/dotfile/keyboard/karabiner/scripts/workbench/karabiner-rules/${Date.now()}.json`\n) => {\n    getComplexRules(to, from, path);\n};\n","/**map shift + space + HJKL to arrow */\n\nimport { karabinerCondition } from \"../../types\";\nimport {\n    getComplexRules,\n    getCustomModifier,\n    getFromKey,\n    getJSONFIle,\n    getToKey,\n} from \"../../utils\";\nimport { modifiers } from \"../../utils/keys\";\n\nconst { rule: spaceModifierRule, modifierName } = getCustomModifier(\"spacebar\");\nconst conditions: Array<karabinerCondition> = [\n    {\n        name: modifierName,\n        type: \"variable_if\",\n        value: 1,\n    },\n];\n\nconst from = {\n    left: getFromKey(\"h\", [modifiers.shift]),\n    down: getFromKey(\"j\", [modifiers.shift]),\n    up: getFromKey(\"k\", [modifiers.shift]),\n    right: getFromKey(\"l\", [modifiers.shift]),\n};\n\nconst to = {\n    left: getToKey(\"left_arrow\"),\n    down: getToKey(\"down_arrow\"),\n    up: getToKey(\"up_arrow\"),\n    right: getToKey(\"right_arrow\"),\n};\n\nexport const getSpaceModifier = (\n    path: string = `/Users/henry/HH-workspace/dotfile/keyboard/karabiner/scripts/workbench/karabiner-rules/${Date.now()}.json`\n) => {\n    getJSONFIle(spaceModifierRule, path);\n};\n\nexport const getArrow = () => {\n    getComplexRules(\n        to,\n        from,\n        `/Users/henry/HH-workspace/dotfile/keyboard/karabiner/scripts/workbench/karabiner-rules/${Date.now()}.json`,\n        conditions\n    );\n};\n","/**\n\n| name               | press   | map to        |\n| ------------------ | ------- | ------------- |\n| deleteCharForward  | hyper+n | backspace     |\n| deleteWordForward  | hyper+m | backspace+alt |\n| deleteCharBackward | hyper+, | backspace     |\n| deleteWordBackward | hyper+. | delete+alt    |\n\n */\n\nimport { getComplexRules } from \"../../utils\";\nimport { karabinerFromKey, karabinerToKey } from \"../../types\";\n\nimport { getToKey, getFromKey } from \"../../utils\";\nimport { hyperExcludeShift, modifiers } from \"../../utils/keys\";\n\ntype Key =\n    | \"deleteCharForward\"\n    | \"deleteWordForward\"\n    | \"deleteCharBackward\"\n    | \"deleteWordBackward\";\n\nconst to: Record<Key, karabinerToKey> = {\n    deleteCharForward: getToKey(\"delete_or_backspace\"),\n    deleteWordForward: getToKey(\"delete_or_backspace\", [modifiers.opt]),\n    deleteWordBackward: getToKey(\"delete_forward\", [modifiers.opt]),\n    deleteCharBackward: getToKey(\"delete_forward\"),\n};\n\nconst from: Record<Key, karabinerFromKey> = {\n    deleteCharForward: getFromKeyWithHyper(\"n\"),\n    deleteWordForward: getFromKeyWithHyper(\"m\"),\n    deleteWordBackward: getFromKeyWithHyper(\"comma\"),\n    deleteCharBackward: getFromKeyWithHyper(\"period\"),\n};\n\nexport async function mapDeleteBackspace(\n    path: string = `/Users/henry/HH-workspace/dotfile/keyboard/karabiner/scripts/workbench/karabiner-rules/${Date.now()}.json`\n) {\n    getComplexRules(to, from, path);\n}\n\nfunction getFromKeyWithHyper(keycode: string, modifier: string = \"\") {\n    if (modifier) {\n        return getFromKey(keycode, [...hyperExcludeShift, modifier]);\n    }\n    return getFromKey(keycode, [...hyperExcludeShift]);\n}\n","// map cmd + Zzcv to hyper + uiop\n\nimport { getComplexRules, getJSONFIle, getKarabinerRule } from \"../../utils\";\nimport { karabinerFromKey, karabinerRule, karabinerToKey } from \"../../types\";\n\nimport { getFromKeyWithHyper, getToKey } from \"../../utils\";\nimport { modifiers } from \"../../utils/keys\";\n\ntype Key = \"undo\" | \"redo\" | \"copy\" | \"paste\";\n\nconst to: Record<Key, karabinerToKey> = {\n    undo: getToKey(\"z\", [modifiers.cmd]),\n    redo: getToKey(\"z\", [modifiers.cmd, modifiers.shift]),\n    copy: getToKey(\"c\", [modifiers.cmd]),\n    paste: getToKey(\"v\", [modifiers.cmd]),\n};\n\nconst from: Record<Key, karabinerFromKey> = {\n    undo: getFromKeyWithHyper(\"i\"),\n    redo: getFromKeyWithHyper(\"u\"),\n    copy: getFromKeyWithHyper(\"o\"),\n    paste: getFromKeyWithHyper(\"p\"),\n};\n\nexport async function mapRedoUndoCopyPaste(\n    path: string = `/Users/henry/HH-workspace/dotfile/keyboard/karabiner/scripts/workbench/karabiner-rules/${Date.now()}.json`\n) {\n    getComplexRules(to, from, path);\n}\n","import { karabinerFromKey, karabinerToKey } from \"../../types\";\nimport {\n    getComplexRules,\n    getFromKey,\n    getFromKeyWithHyper,\n    getToKey,\n} from \"../../utils\";\nimport { arrowKey, deleteKey, modifiers } from \"../../utils/keys\";\n\nconst mode = {\n    select: \"left_command\",\n    delete: \"left_option\",\n};\n\ntype AnchorType =\n    | \"wordStart\"\n    | \"wordEnd\"\n    | \"lineStart\"\n    | \"lineEnd\"\n    | \"charStart\"\n    | \"charEnd\"\n    | \"lineUp\"\n    | \"lineDown\"\n    | \"pageUp\"\n    | \"pageDown\";\n\ntype AnchorDeleteType = Exclude<\n    AnchorType,\n    \"lineUp\" | \"lineDown\" | \"pageUp\" | \"pageDown\"\n>;\n\ntype Anchor<T> = Record<AnchorType, T>;\n\ntype AnchorDelete<T> = Record<AnchorDeleteType, T>;\n\nconst leftHandAnchor: Anchor<string> = {\n    wordStart: \"s\",\n    wordEnd: \"d\",\n    lineStart: \"a\",\n    lineEnd: \"f\",\n    charStart: \"q\",\n    charEnd: \"r\",\n    lineUp: \"e\",\n    lineDown: \"w\",\n    pageUp: \"t\",\n    pageDown: \"g\",\n};\n\nconst leftHandAnchorDelete: AnchorDelete<string> = {\n    wordStart: \"s\",\n    wordEnd: \"d\",\n    lineStart: \"a\",\n    lineEnd: \"f\",\n    charStart: \"q\",\n    charEnd: \"r\",\n};\n\nconst toNavigation: Anchor<karabinerToKey> = {\n    wordStart: getToKey(arrowKey.left, [modifiers.opt]),\n    wordEnd: getToKey(arrowKey.right, [modifiers.opt]),\n    lineStart: getToKey(arrowKey.left, [modifiers.cmd]),\n    lineEnd: getToKey(arrowKey.right, [modifiers.cmd]),\n    charStart: getToKey(arrowKey.left),\n    charEnd: getToKey(arrowKey.right),\n    lineUp: getToKey(arrowKey.up),\n    lineDown: getToKey(arrowKey.down),\n    pageUp: getToKey(arrowKey.up, [modifiers.cmd]),\n    pageDown: getToKey(arrowKey.down, [modifiers.cmd]),\n};\n\nconst toDelete: AnchorDelete<karabinerToKey> = {\n    wordStart: getToKey(deleteKey.deleteBackward, [modifiers.opt]),\n    wordEnd: getToKey(deleteKey.deleteForward, [modifiers.opt]),\n    lineStart: getToKey(deleteKey.deleteBackward, [modifiers.cmd]),\n    lineEnd: getToKey(deleteKey.deleteForward, [modifiers.cmd]),\n    charStart: getToKey(deleteKey.deleteBackward),\n    charEnd: getToKey(deleteKey.deleteForward),\n};\n\nconst toSelect: Anchor<karabinerToKey> = {\n    wordStart: getToKey(arrowKey.left, [modifiers.shift, modifiers.opt]),\n    wordEnd: getToKey(arrowKey.right, [modifiers.shift, modifiers.opt]),\n    lineStart: getToKey(arrowKey.left, [modifiers.cmd, modifiers.shift]),\n    lineEnd: getToKey(arrowKey.right, [modifiers.cmd, modifiers.shift]),\n    charStart: getToKey(arrowKey.left, [modifiers.shift]),\n    charEnd: getToKey(arrowKey.right, [modifiers.shift]),\n    lineUp: getToKey(arrowKey.up, [modifiers.shift]),\n    lineDown: getToKey(arrowKey.down, [modifiers.shift]),\n    pageUp: getToKey(arrowKey.up, [modifiers.cmd, modifiers.shift]),\n    pageDown: getToKey(arrowKey.down, [modifiers.cmd, modifiers.shift]),\n};\n\nconst fromNavigation = getFromObj(leftHandAnchor);\nconst fromSelect = getFromObj(leftHandAnchor, modifiers.cmd);\nconst fromDelete = getFromObj(leftHandAnchorDelete, modifiers.opt);\n\nexport const getRuleNavigation = () => {\n    return getComplexRules(toNavigation, fromNavigation);\n};\nexport const getRuleSelect = () => {\n    return getComplexRules(toSelect, fromSelect);\n};\nexport const getRuleDelete = () => {\n    return getComplexRules(toDelete, fromDelete);\n};\n\nfunction getFromObj(anchor: Record<string, string>, modifier: string = \"\") {\n    const from = {} as Record<AnchorType | AnchorDeleteType, karabinerFromKey>;\n    Object.keys(anchor).map((key) => {\n        const theKey = key as AnchorType | AnchorDeleteType;\n        if (modifier) {\n            from[theKey] = getFromKeyWithHyper(anchor[key], modifier);\n        } else {\n            from[theKey] = getFromKeyWithHyper(anchor[key]);\n        }\n    });\n    return from;\n}\n","import { hyperNavigation } from \"./profiles/caplock-enhance/hypeNavigation\";\nimport { getSpaceModifier, getArrow } from \"./profiles/palmS/mapArrow\";\nimport { mapDeleteBackspace } from \"./profiles/palmS/mapDeleteBackspace\";\nimport { mapRedoUndoCopyPaste } from \"./profiles/caplock-enhance/mapRedoUndoCopyPaste\";\nimport {\n    getRuleNavigation,\n    getRuleSelect,\n    getRuleDelete,\n} from \"./profiles/thumbs/index\";\n\nexport const mapHyperNavigation = hyperNavigation;\nexport const mapUndoRedoCopyPaste = mapRedoUndoCopyPaste;\nexport const mapBackSpaceDelete = mapDeleteBackspace;\nexport const mapArrow = {\n    getSpaceModifier,\n    getArrow,\n};\nexport const thumbs = {\n    getRuleNavigation,\n    getRuleSelect,\n    getRuleDelete,\n};\n"],"names":["getFromKeyWithHyper","from","to"],"mappings":";;;AAAO,MAAM,KAAQ,GAAA;AAAA,EACjB,eAAA;AAAA,EACA,eAAA;AAAA,EACA,aAAA;AAAA,EACA,cAAA;AACJ,CAAA,CAAA;AAEO,MAAM,iBAAoB,GAAA;AAAA,EAC7B,eAAA;AAAA,EACA,eAAA;AAAA,EACA,cAAA;AACJ,CAAA,CAAA;AAEO,MAAM,SAAY,GAAA;AAAA,EACrB,IAAM,EAAA,cAAA;AAAA,EACN,GAAK,EAAA,cAAA;AAAA,EACL,GAAK,EAAA,aAAA;AAAA,EACL,KAAO,EAAA,YAAA;AACX,CAAA,CAAA;AACO,MAAM,QAAW,GAAA;AAAA,EACpB,IAAM,EAAA,YAAA;AAAA,EACN,KAAO,EAAA,aAAA;AAAA,EACP,EAAI,EAAA,UAAA;AAAA,EACJ,IAAM,EAAA,YAAA;AACV,CAAA,CAAA;AAEO,MAAM,SAAY,GAAA;AAAA,EACrB,cAAgB,EAAA,qBAAA;AAAA,EAChB,aAAe,EAAA,gBAAA;AACnB,CAAA;;ACnBO,SAAS,kBAAkB,OAAiB,EAAA;AAC/C,EAAA,MAAM,qBAAqB,CAAG,EAAA,OAAA,CAAA,SAAA,CAAA,CAAA;AAC9B,EAAA,MAAM,IAAO,GAAA;AAAA,IACT,IAAM,EAAA;AAAA,MACF,QAAU,EAAA,OAAA;AAAA,KACd;AAAA,IACA,EAAI,EAAA;AAAA,MACA;AAAA,QACI,YAAc,EAAA;AAAA,UACV,IAAM,EAAA,kBAAA;AAAA,UACN,KAAO,EAAA,CAAA;AAAA,SACX;AAAA,OACJ;AAAA,KACJ;AAAA,IACA,eAAiB,EAAA;AAAA,MACb;AAAA,QACI,YAAc,EAAA;AAAA,UACV,IAAM,EAAA,kBAAA;AAAA,UACN,KAAO,EAAA,CAAA;AAAA,SACX;AAAA,OACJ;AAAA,KACJ;AAAA,IACA,WAAa,EAAA;AAAA,MACT;AAAA,QACI,QAAU,EAAA,OAAA;AAAA,OACd;AAAA,KACJ;AAAA,IACA,IAAM,EAAA,OAAA;AAAA,GACV,CAAA;AACA,EAAO,OAAA;AAAA,IACH,IAAA;AAAA,IACA,YAAc,EAAA,kBAAA;AAAA,GAClB,CAAA;AACJ,CAAA;AAEsB,eAAA,eAAA,CAIlB,EACA,EAAA,IAAA,EACA,IAAe,GAAA,CAAA,uFAAA,EAA0F,KAAK,GAAI,EAAA,CAAA,KAAA,CAAA,EAClH,UAAwC,GAAA,EAC1C,EAAA;AACE,EAAA,MAAM,QAAyB,EAAC,CAAA;AAChC,EAAA,MAAA,CAAO,IAAK,CAAA,IAAI,CAAE,CAAA,OAAA,CAAQ,CAAC,GAAgB,KAAA;AACvC,IAAA,MAAM,IAAO,GAAA,gBAAA;AAAA,MACT,GAAI,CAAA,KAAA,CAAM,GAAG,CAAA,CAAE,KAAK,GAAG,CAAA;AAAA,MACvB,IAAK,CAAA,GAAA,CAAA;AAAA,MACL,EAAG,CAAA,GAAA,CAAA;AAAA,MACH,UAAA;AAAA,KACJ,CAAA;AACA,IAAA,KAAA,CAAM,KAAK,IAAI,CAAA,CAAA;AAAA,GAClB,CAAA,CAAA;AACD,EAAI,IAAA;AACA,IAAM,MAAA,WAAA,CAAY,OAAO,IAAI,CAAA,CAAA;AAAA,WACxB,KAAP,EAAA;AACE,IAAA,OAAA,CAAQ,IAAI,KAAK,CAAA,CAAA;AAAA,GACrB;AACA,EAAO,OAAA,KAAA,CAAA;AACX,CAAA;AAEO,SAAS,iBACZ,IACA,EAAA,OAAA,EACA,KACA,EAAA,UAAA,GAAwC,EACd,EAAA;AAC1B,EAAO,OAAA;AAAA,IACH,WAAa,EAAA,IAAA;AAAA,IACb,IAAM,EAAA,OAAA;AAAA,IACN,EAAI,EAAA,KAAA;AAAA,IACJ,IAAM,EAAA,OAAA;AAAA,IACN,UAAA;AAAA,GACJ,CAAA;AACJ,CAAA;AAKsB,eAAA,WAAA,CAAY,MAAc,IAAc,EAAA;AAC1D,EAAA,MAAM,EAAG,CAAA,SAAA;AAAA,IACL,IAAA;AAAA,IACA,IAAA,CAAK,UAAU,IAAI,CAAA;AAAA,IACnB,EAAE,MAAM,IAAK,EAAA;AAAA,IACb,SAAU,GAAK,EAAA;AACX,MAAI,IAAA,GAAA;AAAK,QAAM,MAAA,GAAA,CAAA;AACf,MAAQ,OAAA,CAAA,GAAA,CAAI,iBAAiB,IAAM,CAAA,CAAA,CAAA,CAAA;AAAA,KACvC;AAAA,GACJ,CAAA;AACJ,CAAA;AAEO,SAAS,QAAS,CAAA,OAAA,EAAiB,SAA2B,GAAA,EAAI,EAAA;AACrE,EAAI,IAAA,SAAA,CAAU,WAAW,CAAG,EAAA;AACxB,IAAO,OAAA;AAAA,MACH,QAAU,EAAA,OAAA;AAAA,KACd,CAAA;AAAA,GACJ;AACA,EAAO,OAAA;AAAA,IACH,QAAU,EAAA,OAAA;AAAA,IACV,SAAA;AAAA,GACJ,CAAA;AACJ,CAAA;AAEgB,SAAA,UAAA,CAAW,SAAiB,SAA0B,EAAA;AAClE,EAAO,OAAA;AAAA,IACH,QAAU,EAAA,OAAA;AAAA,IACV,SAAW,EAAA;AAAA,MACP,SAAW,EAAA,SAAA;AAAA,KACf;AAAA,GACJ,CAAA;AACJ,CAAA;AAEgB,SAAAA,qBAAA,CAAoB,OAAiB,EAAA,QAAA,GAAmB,EAAI,EAAA;AACxE,EAAA,IAAI,QAAU,EAAA;AACV,IAAA,OAAO,WAAW,OAAS,EAAA,CAAC,GAAG,KAAA,EAAO,QAAQ,CAAC,CAAA,CAAA;AAAA,GACnD;AACA,EAAA,OAAO,UAAW,CAAA,OAAA,EAAS,CAAC,GAAG,KAAK,CAAC,CAAA,CAAA;AACzC;;ACtHO,MAAM,SAAwB,GAAA;AAAA,EACjC,IAAM,EAAA;AAAA,IACF,YAAY,SAAU,CAAA,GAAA;AAAA,IACtB,QAAQ,SAAU,CAAA,GAAA;AAAA,GACtB;AAAA,EACA,IAAM,EAAA;AAAA,IACF,UAAY,EAAA;AAAA,MACR,IAAM,EAAA,GAAA;AAAA,MACN,KAAO,EAAA,GAAA;AAAA,KACX;AAAA,IACA,MAAQ,EAAA;AAAA,MACJ,IAAM,EAAA,GAAA;AAAA,MACN,KAAO,EAAA,GAAA;AAAA,KACX;AAAA,GACJ;AAAA,EACA,IAAM,EAAA;AAAA,IACF,UAAY,EAAA;AAAA,MACR,IAAM,EAAA,GAAA;AAAA,MACN,KAAO,EAAA,GAAA;AAAA,KACX;AAAA,IACA,MAAQ,EAAA;AAAA,MACJ,IAAM,EAAA,GAAA;AAAA,MACN,KAAO,EAAA,GAAA;AAAA,KACX;AAAA,GACJ;AAAA,EACA,KAAO,EAAA;AAAA,IACH,UAAY,EAAA;AAAA,MACR,KAAO,EAAA,GAAA;AAAA,MACP,GAAK,EAAA,GAAA;AAAA,KACT;AAAA,IACA,MAAQ,EAAA;AAAA,MACJ,KAAO,EAAA,GAAA;AAAA,MACP,GAAK,EAAA,GAAA;AAAA,KACT;AAAA,GACJ;AAAA,EACA,KAAO,EAAA;AAAA,IACH,UAAY,EAAA;AAAA,MACR,EAAI,EAAA,GAAA;AAAA,MACJ,IAAM,EAAA,GAAA;AAAA,KACV;AAAA,IACA,MAAQ,EAAA;AAAA,MACJ,IAAM,EAAA,GAAA;AAAA,MACN,IAAM,EAAA,GAAA;AAAA,KACV;AAAA,GACJ;AAAA,EACA,IAAM,EAAA;AAAA,IACF,UAAY,EAAA;AAAA,MACR,KAAO,EAAA,GAAA;AAAA,MACP,GAAK,EAAA,GAAA;AAAA,KACT;AAAA,IACA,MAAQ,EAAA;AAAA,MACJ,KAAO,EAAA,GAAA;AAAA,MACP,KAAO,EAAA,GAAA;AAAA,KACX;AAAA,GACJ;AACJ,CAAA;;AC1DO,MAAM,qBAAiD,GAAA;AAAA,EAC1D,IAAM,EAAA;AAAA,IACF,UAAY,EAAA;AAAA,MACR,IAAA,EAAM,QAAS,CAAA,QAAA,CAAS,IAAI,CAAA;AAAA,MAC5B,KAAA,EAAO,QAAS,CAAA,QAAA,CAAS,KAAK,CAAA;AAAA,KAClC;AAAA,IACA,MAAQ,EAAA;AAAA,MACJ,MAAM,QAAS,CAAA,QAAA,CAAS,MAAM,CAAC,SAAA,CAAU,KAAK,CAAC,CAAA;AAAA,MAC/C,OAAO,QAAS,CAAA,QAAA,CAAS,OAAO,CAAC,SAAA,CAAU,KAAK,CAAC,CAAA;AAAA,KACrD;AAAA,GACJ;AAAA,EACA,IAAM,EAAA;AAAA,IACF,UAAY,EAAA;AAAA,MACR,MAAM,QAAS,CAAA,QAAA,CAAS,MAAM,CAAC,SAAA,CAAU,GAAG,CAAC,CAAA;AAAA,MAC7C,OAAO,QAAS,CAAA,QAAA,CAAS,OAAO,CAAC,SAAA,CAAU,GAAG,CAAC,CAAA;AAAA,KACnD;AAAA,IACA,MAAQ,EAAA;AAAA,MACJ,IAAA,EAAM,SAAS,QAAS,CAAA,IAAA,EAAM,CAAC,SAAU,CAAA,KAAA,EAAO,SAAU,CAAA,GAAG,CAAC,CAAA;AAAA,MAC9D,KAAA,EAAO,SAAS,QAAS,CAAA,KAAA,EAAO,CAAC,SAAU,CAAA,KAAA,EAAO,SAAU,CAAA,GAAG,CAAC,CAAA;AAAA,KACpE;AAAA,GACJ;AAAA,EACA,KAAO,EAAA;AAAA,IACH,UAAY,EAAA;AAAA,MACR,OAAO,QAAS,CAAA,QAAA,CAAS,MAAM,CAAC,SAAA,CAAU,GAAG,CAAC,CAAA;AAAA,MAC9C,KAAK,QAAS,CAAA,QAAA,CAAS,OAAO,CAAC,SAAA,CAAU,GAAG,CAAC,CAAA;AAAA,KACjD;AAAA,IACA,MAAQ,EAAA;AAAA,MACJ,KAAA,EAAO,SAAS,QAAS,CAAA,IAAA,EAAM,CAAC,SAAU,CAAA,GAAA,EAAK,SAAU,CAAA,KAAK,CAAC,CAAA;AAAA,MAC/D,GAAA,EAAK,SAAS,QAAS,CAAA,KAAA,EAAO,CAAC,SAAU,CAAA,GAAA,EAAK,SAAU,CAAA,KAAK,CAAC,CAAA;AAAA,KAClE;AAAA,GACJ;AAAA,EACA,KAAO,EAAA;AAAA,IACH,UAAY,EAAA;AAAA,MACR,EAAA,EAAI,QAAS,CAAA,QAAA,CAAS,EAAE,CAAA;AAAA,MACxB,IAAA,EAAM,QAAS,CAAA,QAAA,CAAS,IAAI,CAAA;AAAA,KAChC;AAAA,IACA,MAAQ,EAAA;AAAA,MACJ,MAAM,QAAS,CAAA,QAAA,CAAS,IAAI,CAAC,SAAA,CAAU,KAAK,CAAC,CAAA;AAAA,MAC7C,MAAM,QAAS,CAAA,QAAA,CAAS,MAAM,CAAC,SAAA,CAAU,KAAK,CAAC,CAAA;AAAA,KACnD;AAAA,GACJ;AAAA,EACA,IAAM,EAAA;AAAA,IACF,UAAY,EAAA;AAAA,MACR,OAAO,QAAS,CAAA,QAAA,CAAS,IAAI,CAAC,SAAA,CAAU,GAAG,CAAC,CAAA;AAAA,MAC5C,KAAK,QAAS,CAAA,QAAA,CAAS,MAAM,CAAC,SAAA,CAAU,GAAG,CAAC,CAAA;AAAA,KAChD;AAAA,IACA,MAAQ,EAAA;AAAA,MACJ,KAAA,EAAO,SAAS,QAAS,CAAA,EAAA,EAAI,CAAC,SAAU,CAAA,GAAA,EAAK,SAAU,CAAA,KAAK,CAAC,CAAA;AAAA,MAC7D,KAAA,EAAO,SAAS,QAAS,CAAA,IAAA,EAAM,CAAC,SAAU,CAAA,GAAA,EAAK,SAAU,CAAA,KAAK,CAAC,CAAA;AAAA,KACnE;AAAA,GACJ;AACJ,CAAA,CAAA;AAGO,MAAM,oBAAkD,GAAA;AAAA,EAC3D,IAAM,EAAA;AAAA,IAEF,UAAY,EAAA;AAAA,MACR,IAAM,EAAAA,qBAAA,CAAoB,SAAU,CAAA,IAAA,CAAK,WAAW,IAAI,CAAA;AAAA,MACxD,KAAO,EAAAA,qBAAA,CAAoB,SAAU,CAAA,IAAA,CAAK,WAAW,KAAK,CAAA;AAAA,KAC9D;AAAA,IACA,MAAQ,EAAA;AAAA,MACJ,IAAM,EAAAA,qBAAA;AAAA,QACF,SAAA,CAAU,KAAK,MAAO,CAAA,IAAA;AAAA,QACtB,UAAU,IAAK,CAAA,MAAA;AAAA,OACnB;AAAA,MACA,KAAO,EAAAA,qBAAA;AAAA,QACH,SAAA,CAAU,KAAK,MAAO,CAAA,KAAA;AAAA,QACtB,UAAU,IAAK,CAAA,MAAA;AAAA,OACnB;AAAA,KACJ;AAAA,GACJ;AAAA,EACA,IAAM,EAAA;AAAA,IACF,UAAY,EAAA;AAAA,MACR,IAAM,EAAAA,qBAAA;AAAA,QACF,SAAA,CAAU,KAAK,UAAW,CAAA,IAAA;AAAA,QAC1B,UAAU,IAAK,CAAA,UAAA;AAAA,OACnB;AAAA,MACA,KAAO,EAAAA,qBAAA;AAAA,QACH,SAAA,CAAU,KAAK,UAAW,CAAA,KAAA;AAAA,QAC1B,UAAU,IAAK,CAAA,UAAA;AAAA,OACnB;AAAA,KACJ;AAAA,IACA,MAAQ,EAAA;AAAA,MACJ,IAAM,EAAAA,qBAAA;AAAA,QACF,SAAA,CAAU,KAAK,UAAW,CAAA,IAAA;AAAA,QAC1B,UAAU,IAAK,CAAA,MAAA;AAAA,OACnB;AAAA,MACA,KAAO,EAAAA,qBAAA;AAAA,QACH,SAAA,CAAU,KAAK,UAAW,CAAA,KAAA;AAAA,QAC1B,UAAU,IAAK,CAAA,MAAA;AAAA,OACnB;AAAA,KACJ;AAAA,GACJ;AAAA,EACA,KAAO,EAAA;AAAA,IACH,UAAY,EAAA;AAAA,MAER,KAAO,EAAAA,qBAAA;AAAA,QACH,SAAA,CAAU,MAAM,UAAW,CAAA,KAAA;AAAA,QAC3B,UAAU,IAAK,CAAA,UAAA;AAAA,OACnB;AAAA,MACA,GAAK,EAAAA,qBAAA;AAAA,QACD,SAAA,CAAU,MAAM,UAAW,CAAA,GAAA;AAAA,QAC3B,UAAU,IAAK,CAAA,UAAA;AAAA,OACnB;AAAA,KACJ;AAAA,IACA,MAAQ,EAAA;AAAA,MACJ,KAAO,EAAAA,qBAAA;AAAA,QACH,SAAA,CAAU,MAAM,MAAO,CAAA,KAAA;AAAA,QACvB,SAAU,CAAA,GAAA;AAAA,OACd;AAAA,MACA,KAAKA,qBAAoB,CAAA,SAAA,CAAU,MAAM,MAAO,CAAA,GAAA,EAAK,UAAU,GAAG,CAAA;AAAA,KACtE;AAAA,GACJ;AAAA,EACA,KAAO,EAAA;AAAA,IACH,MAAQ,EAAA;AAAA,MACJ,IAAM,EAAAA,qBAAA;AAAA,QACF,SAAA,CAAU,MAAM,MAAO,CAAA,IAAA;AAAA,QACvB,UAAU,IAAK,CAAA,MAAA;AAAA,OACnB;AAAA,MACA,IAAM,EAAAA,qBAAA;AAAA,QACF,SAAA,CAAU,MAAM,MAAO,CAAA,IAAA;AAAA,QACvB,UAAU,IAAK,CAAA,MAAA;AAAA,OACnB;AAAA,KACJ;AAAA,IACA,UAAY,EAAA;AAAA,MACR,EAAI,EAAAA,qBAAA,CAAoB,SAAU,CAAA,KAAA,CAAM,WAAW,EAAE,CAAA;AAAA,MACrD,IAAM,EAAAA,qBAAA,CAAoB,SAAU,CAAA,KAAA,CAAM,WAAW,IAAI,CAAA;AAAA,KAC7D;AAAA,GACJ;AAAA,EACA,IAAM,EAAA;AAAA,IACF,UAAY,EAAA;AAAA,MACR,KAAO,EAAAA,qBAAA;AAAA,QACH,SAAA,CAAU,KAAK,UAAW,CAAA,KAAA;AAAA,QAC1B,UAAU,IAAK,CAAA,UAAA;AAAA,OACnB;AAAA,MACA,GAAK,EAAAA,qBAAA;AAAA,QACD,SAAA,CAAU,KAAK,UAAW,CAAA,GAAA;AAAA,QAC1B,UAAU,IAAK,CAAA,UAAA;AAAA,OACnB;AAAA,KACJ;AAAA,IACA,MAAQ,EAAA;AAAA,MACJ,KAAO,EAAAA,qBAAA;AAAA,QACH,SAAA,CAAU,KAAK,MAAO,CAAA,KAAA;AAAA,QACtB,UAAU,IAAK,CAAA,MAAA;AAAA,OACnB;AAAA,MACA,KAAO,EAAAA,qBAAA;AAAA,QACH,SAAA,CAAU,KAAK,MAAO,CAAA,KAAA;AAAA,QACtB,UAAU,IAAK,CAAA,MAAA;AAAA,OACnB;AAAA,KACJ;AAAA,GACJ;AACJ,CAAA;;AC1JA,MAAMC,SAAO,IAAK,CAAA,oBAAA,EAAsB,EAAE,QAAA,EAAU,GAAG,CAAA,CAAA;AAGvD,MAAMC,OAAK,IAAK,CAAA,qBAAA,EAAuB,EAAE,QAAA,EAAU,GAAG,CAAA,CAAA;AAI/C,MAAM,kBAAkB,CAC3B,IAAA,GAAe,CAA0F,uFAAA,EAAA,IAAA,CAAK,KAC7G,CAAA,KAAA,CAAA,KAAA;AACD,EAAgB,eAAA,CAAAA,IAAA,EAAID,QAAM,IAAI,CAAA,CAAA;AAClC,CAAA;;ACJA,MAAM,EAAE,IAAM,EAAA,iBAAA,EAAmB,YAAa,EAAA,GAAI,kBAAkB,UAAU,CAAA,CAAA;AAC9E,MAAM,UAAwC,GAAA;AAAA,EAC1C;AAAA,IACI,IAAM,EAAA,YAAA;AAAA,IACN,IAAM,EAAA,aAAA;AAAA,IACN,KAAO,EAAA,CAAA;AAAA,GACX;AACJ,CAAA,CAAA;AAEA,MAAMA,MAAO,GAAA;AAAA,EACT,MAAM,UAAW,CAAA,GAAA,EAAK,CAAC,SAAA,CAAU,KAAK,CAAC,CAAA;AAAA,EACvC,MAAM,UAAW,CAAA,GAAA,EAAK,CAAC,SAAA,CAAU,KAAK,CAAC,CAAA;AAAA,EACvC,IAAI,UAAW,CAAA,GAAA,EAAK,CAAC,SAAA,CAAU,KAAK,CAAC,CAAA;AAAA,EACrC,OAAO,UAAW,CAAA,GAAA,EAAK,CAAC,SAAA,CAAU,KAAK,CAAC,CAAA;AAC5C,CAAA,CAAA;AAEA,MAAMC,IAAK,GAAA;AAAA,EACP,IAAA,EAAM,SAAS,YAAY,CAAA;AAAA,EAC3B,IAAA,EAAM,SAAS,YAAY,CAAA;AAAA,EAC3B,EAAA,EAAI,SAAS,UAAU,CAAA;AAAA,EACvB,KAAA,EAAO,SAAS,aAAa,CAAA;AACjC,CAAA,CAAA;AAEO,MAAM,mBAAmB,CAC5B,IAAA,GAAe,CAA0F,uFAAA,EAAA,IAAA,CAAK,KAC7G,CAAA,KAAA,CAAA,KAAA;AACD,EAAA,WAAA,CAAY,mBAAmB,IAAI,CAAA,CAAA;AACvC,CAAA,CAAA;AAEO,MAAM,WAAW,MAAM;AAC1B,EAAA,eAAA;AAAA,IACIA,IAAA;AAAA,IACAD,MAAA;AAAA,IACA,CAAA,uFAAA,EAA0F,KAAK,GAAI,EAAA,CAAA,KAAA,CAAA;AAAA,IACnG,UAAA;AAAA,GACJ,CAAA;AACJ,CAAA;;ACzBA,MAAMC,IAAkC,GAAA;AAAA,EACpC,iBAAA,EAAmB,SAAS,qBAAqB,CAAA;AAAA,EACjD,mBAAmB,QAAS,CAAA,qBAAA,EAAuB,CAAC,SAAA,CAAU,GAAG,CAAC,CAAA;AAAA,EAClE,oBAAoB,QAAS,CAAA,gBAAA,EAAkB,CAAC,SAAA,CAAU,GAAG,CAAC,CAAA;AAAA,EAC9D,kBAAA,EAAoB,SAAS,gBAAgB,CAAA;AACjD,CAAA,CAAA;AAEA,MAAMD,MAAsC,GAAA;AAAA,EACxC,iBAAA,EAAmB,oBAAoB,GAAG,CAAA;AAAA,EAC1C,iBAAA,EAAmB,oBAAoB,GAAG,CAAA;AAAA,EAC1C,kBAAA,EAAoB,oBAAoB,OAAO,CAAA;AAAA,EAC/C,kBAAA,EAAoB,oBAAoB,QAAQ,CAAA;AACpD,CAAA,CAAA;AAEA,eAAsB,kBAClB,CAAA,IAAA,GAAe,CAA0F,uFAAA,EAAA,IAAA,CAAK,KAChH,CAAA,KAAA,CAAA,EAAA;AACE,EAAgB,eAAA,CAAAC,IAAA,EAAID,QAAM,IAAI,CAAA,CAAA;AAClC,CAAA;AAEA,SAAS,mBAAA,CAAoB,OAAiB,EAAA,QAAA,GAAmB,EAAI,EAAA;AACjE,EAAA,IAAI,QAAU,EAAA;AACV,IAAA,OAAO,WAAW,OAAS,EAAA,CAAC,GAAG,iBAAA,EAAmB,QAAQ,CAAC,CAAA,CAAA;AAAA,GAC/D;AACA,EAAA,OAAO,UAAW,CAAA,OAAA,EAAS,CAAC,GAAG,iBAAiB,CAAC,CAAA,CAAA;AACrD;;ACtCA,MAAM,EAAkC,GAAA;AAAA,EACpC,MAAM,QAAS,CAAA,GAAA,EAAK,CAAC,SAAA,CAAU,GAAG,CAAC,CAAA;AAAA,EACnC,IAAA,EAAM,SAAS,GAAK,EAAA,CAAC,UAAU,GAAK,EAAA,SAAA,CAAU,KAAK,CAAC,CAAA;AAAA,EACpD,MAAM,QAAS,CAAA,GAAA,EAAK,CAAC,SAAA,CAAU,GAAG,CAAC,CAAA;AAAA,EACnC,OAAO,QAAS,CAAA,GAAA,EAAK,CAAC,SAAA,CAAU,GAAG,CAAC,CAAA;AACxC,CAAA,CAAA;AAEA,MAAM,IAAsC,GAAA;AAAA,EACxC,IAAA,EAAMD,sBAAoB,GAAG,CAAA;AAAA,EAC7B,IAAA,EAAMA,sBAAoB,GAAG,CAAA;AAAA,EAC7B,IAAA,EAAMA,sBAAoB,GAAG,CAAA;AAAA,EAC7B,KAAA,EAAOA,sBAAoB,GAAG,CAAA;AAClC,CAAA,CAAA;AAEA,eAAsB,oBAClB,CAAA,IAAA,GAAe,CAA0F,uFAAA,EAAA,IAAA,CAAK,KAChH,CAAA,KAAA,CAAA,EAAA;AACE,EAAgB,eAAA,CAAA,EAAA,EAAI,MAAM,IAAI,CAAA,CAAA;AAClC;;ACOA,MAAM,cAAiC,GAAA;AAAA,EACnC,SAAW,EAAA,GAAA;AAAA,EACX,OAAS,EAAA,GAAA;AAAA,EACT,SAAW,EAAA,GAAA;AAAA,EACX,OAAS,EAAA,GAAA;AAAA,EACT,SAAW,EAAA,GAAA;AAAA,EACX,OAAS,EAAA,GAAA;AAAA,EACT,MAAQ,EAAA,GAAA;AAAA,EACR,QAAU,EAAA,GAAA;AAAA,EACV,MAAQ,EAAA,GAAA;AAAA,EACR,QAAU,EAAA,GAAA;AACd,CAAA,CAAA;AAEA,MAAM,oBAA6C,GAAA;AAAA,EAC/C,SAAW,EAAA,GAAA;AAAA,EACX,OAAS,EAAA,GAAA;AAAA,EACT,SAAW,EAAA,GAAA;AAAA,EACX,OAAS,EAAA,GAAA;AAAA,EACT,SAAW,EAAA,GAAA;AAAA,EACX,OAAS,EAAA,GAAA;AACb,CAAA,CAAA;AAEA,MAAM,YAAuC,GAAA;AAAA,EACzC,WAAW,QAAS,CAAA,QAAA,CAAS,MAAM,CAAC,SAAA,CAAU,GAAG,CAAC,CAAA;AAAA,EAClD,SAAS,QAAS,CAAA,QAAA,CAAS,OAAO,CAAC,SAAA,CAAU,GAAG,CAAC,CAAA;AAAA,EACjD,WAAW,QAAS,CAAA,QAAA,CAAS,MAAM,CAAC,SAAA,CAAU,GAAG,CAAC,CAAA;AAAA,EAClD,SAAS,QAAS,CAAA,QAAA,CAAS,OAAO,CAAC,SAAA,CAAU,GAAG,CAAC,CAAA;AAAA,EACjD,SAAA,EAAW,QAAS,CAAA,QAAA,CAAS,IAAI,CAAA;AAAA,EACjC,OAAA,EAAS,QAAS,CAAA,QAAA,CAAS,KAAK,CAAA;AAAA,EAChC,MAAA,EAAQ,QAAS,CAAA,QAAA,CAAS,EAAE,CAAA;AAAA,EAC5B,QAAA,EAAU,QAAS,CAAA,QAAA,CAAS,IAAI,CAAA;AAAA,EAChC,QAAQ,QAAS,CAAA,QAAA,CAAS,IAAI,CAAC,SAAA,CAAU,GAAG,CAAC,CAAA;AAAA,EAC7C,UAAU,QAAS,CAAA,QAAA,CAAS,MAAM,CAAC,SAAA,CAAU,GAAG,CAAC,CAAA;AACrD,CAAA,CAAA;AAEA,MAAM,QAAyC,GAAA;AAAA,EAC3C,WAAW,QAAS,CAAA,SAAA,CAAU,gBAAgB,CAAC,SAAA,CAAU,GAAG,CAAC,CAAA;AAAA,EAC7D,SAAS,QAAS,CAAA,SAAA,CAAU,eAAe,CAAC,SAAA,CAAU,GAAG,CAAC,CAAA;AAAA,EAC1D,WAAW,QAAS,CAAA,SAAA,CAAU,gBAAgB,CAAC,SAAA,CAAU,GAAG,CAAC,CAAA;AAAA,EAC7D,SAAS,QAAS,CAAA,SAAA,CAAU,eAAe,CAAC,SAAA,CAAU,GAAG,CAAC,CAAA;AAAA,EAC1D,SAAA,EAAW,QAAS,CAAA,SAAA,CAAU,cAAc,CAAA;AAAA,EAC5C,OAAA,EAAS,QAAS,CAAA,SAAA,CAAU,aAAa,CAAA;AAC7C,CAAA,CAAA;AAEA,MAAM,QAAmC,GAAA;AAAA,EACrC,SAAA,EAAW,SAAS,QAAS,CAAA,IAAA,EAAM,CAAC,SAAU,CAAA,KAAA,EAAO,SAAU,CAAA,GAAG,CAAC,CAAA;AAAA,EACnE,OAAA,EAAS,SAAS,QAAS,CAAA,KAAA,EAAO,CAAC,SAAU,CAAA,KAAA,EAAO,SAAU,CAAA,GAAG,CAAC,CAAA;AAAA,EAClE,SAAA,EAAW,SAAS,QAAS,CAAA,IAAA,EAAM,CAAC,SAAU,CAAA,GAAA,EAAK,SAAU,CAAA,KAAK,CAAC,CAAA;AAAA,EACnE,OAAA,EAAS,SAAS,QAAS,CAAA,KAAA,EAAO,CAAC,SAAU,CAAA,GAAA,EAAK,SAAU,CAAA,KAAK,CAAC,CAAA;AAAA,EAClE,WAAW,QAAS,CAAA,QAAA,CAAS,MAAM,CAAC,SAAA,CAAU,KAAK,CAAC,CAAA;AAAA,EACpD,SAAS,QAAS,CAAA,QAAA,CAAS,OAAO,CAAC,SAAA,CAAU,KAAK,CAAC,CAAA;AAAA,EACnD,QAAQ,QAAS,CAAA,QAAA,CAAS,IAAI,CAAC,SAAA,CAAU,KAAK,CAAC,CAAA;AAAA,EAC/C,UAAU,QAAS,CAAA,QAAA,CAAS,MAAM,CAAC,SAAA,CAAU,KAAK,CAAC,CAAA;AAAA,EACnD,MAAA,EAAQ,SAAS,QAAS,CAAA,EAAA,EAAI,CAAC,SAAU,CAAA,GAAA,EAAK,SAAU,CAAA,KAAK,CAAC,CAAA;AAAA,EAC9D,QAAA,EAAU,SAAS,QAAS,CAAA,IAAA,EAAM,CAAC,SAAU,CAAA,GAAA,EAAK,SAAU,CAAA,KAAK,CAAC,CAAA;AACtE,CAAA,CAAA;AAEA,MAAM,cAAA,GAAiB,WAAW,cAAc,CAAA,CAAA;AAChD,MAAM,UAAa,GAAA,UAAA,CAAW,cAAgB,EAAA,SAAA,CAAU,GAAG,CAAA,CAAA;AAC3D,MAAM,UAAa,GAAA,UAAA,CAAW,oBAAsB,EAAA,SAAA,CAAU,GAAG,CAAA,CAAA;AAE1D,MAAM,oBAAoB,MAAM;AACnC,EAAO,OAAA,eAAA,CAAgB,cAAc,cAAc,CAAA,CAAA;AACvD,CAAA,CAAA;AACO,MAAM,gBAAgB,MAAM;AAC/B,EAAO,OAAA,eAAA,CAAgB,UAAU,UAAU,CAAA,CAAA;AAC/C,CAAA,CAAA;AACO,MAAM,gBAAgB,MAAM;AAC/B,EAAO,OAAA,eAAA,CAAgB,UAAU,UAAU,CAAA,CAAA;AAC/C,CAAA,CAAA;AAEA,SAAS,UAAA,CAAW,MAAgC,EAAA,QAAA,GAAmB,EAAI,EAAA;AACvE,EAAA,MAAM,OAAO,EAAC,CAAA;AACd,EAAA,MAAA,CAAO,IAAK,CAAA,MAAM,CAAE,CAAA,GAAA,CAAI,CAAC,GAAQ,KAAA;AAC7B,IAAA,MAAM,MAAS,GAAA,GAAA,CAAA;AACf,IAAA,IAAI,QAAU,EAAA;AACV,MAAA,IAAA,CAAK,MAAU,CAAA,GAAAA,qBAAA,CAAoB,MAAO,CAAA,GAAA,CAAA,EAAM,QAAQ,CAAA,CAAA;AAAA,KACrD,MAAA;AACH,MAAK,IAAA,CAAA,MAAA,CAAA,GAAUA,qBAAoB,CAAA,MAAA,CAAO,GAAI,CAAA,CAAA,CAAA;AAAA,KAClD;AAAA,GACH,CAAA,CAAA;AACD,EAAO,OAAA,IAAA,CAAA;AACX;;AC3GO,MAAM,kBAAqB,GAAA,gBAAA;AAC3B,MAAM,oBAAuB,GAAA,qBAAA;AAC7B,MAAM,kBAAqB,GAAA,mBAAA;AAC3B,MAAM,QAAW,GAAA;AAAA,EACpB,gBAAA;AAAA,EACA,QAAA;AACJ,EAAA;AACO,MAAM,MAAS,GAAA;AAAA,EAClB,iBAAA;AAAA,EACA,aAAA;AAAA,EACA,aAAA;AACJ;;;;"}