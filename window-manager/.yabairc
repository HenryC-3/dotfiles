# !/usr/bin/env sh

# checkout the example config https://github.com/koekeishiya/yabai/blob/master/examples/yabairc
# checkout documentation https://github.com/koekeishiya/yabai/wiki/Configuration#configuration-file

sudo yabai --load-sa
yabai -m signal --add event=dock_did_restart action="sudo yabai --load-sa"

# general
yabai -m config mouse_follows_focus          off
yabai -m config focus_follows_mouse          off
yabai -m config window_origin_display        default
yabai -m config window_placement             second_child
yabai -m config window_topmost               off
yabai -m config insert_feedback_color        0xffd75f5f
yabai -m config split_ratio                  0.50
yabai -m config auto_balance                 off
yabai -m config mouse_modifier               fn
yabai -m config mouse_action1                move
yabai -m config mouse_action2                resize
yabai -m config mouse_drop_action            swap

# window shadow & opacity
yabai -m config window_shadow                off
yabai -m config window_opacity               off
yabai -m config active_window_opacity        0.9
yabai -m config normal_window_opacity        0.8

# window animation
yabai -m config window_animation_duration    0

# window outline. use to differentiate active and inactive windows
yabai -m config window_border                on
yabai -m config active_window_border_color   0xffcef0cc #pale green
yabai -m config normal_window_border_color   0xff555555   
yabai -m config window_border_width          2            
yabai -m config window_border_radius         12         
yabai -m config window_border_blur           false           
yabai -m config window_border_hidpi          false           


yabai -m config layout                       bsp
# gap between the apps to the screen edge
yabai -m config top_padding                  0
yabai -m config bottom_padding               0
yabai -m config left_padding                 0
yabai -m config right_padding                0
# gap between apps
yabai -m config window_gap                   4


# use keyword "yabai" in raycast for execute script in @/misc/raycast/script-command
yabai -m rule --add title="(Copy|Bin|About This Mac|Info|Installer)" manage=off
yabai -m rule --add app="^(Discord|Slack|Activity Monitor|Logi Options+|Raycast|Ukelele|Calculator|VLC|System Preferences|XMind|ClashX Pro|QQ|Pomatez|Super Productivity|Input Source Pro|iShot|App Store|ScanScan|AltTab)$" manage=off

# setup workspace credit: [Boris Buliga - Automatic setup of spaces with yabai](https://d12frosted.io/posts/2022-04-23-yabai-spaces.html)
# makesure there are only 5 spaces
for _ in $(yabai -m query --spaces | jq '.[].index | select(. > 5)'); do
  yabai -m space --destroy 6
done

# label spaces
function setup_space {
  local idx="$1"
  local name="$2"
  local space=
  echo "setup space $idx : $name"

  space=$(yabai -m query --spaces --space "$idx")
  if [ -z "$space" ]; then
    yabai -m space --create
  fi

  yabai -m space "$idx" --label "$name"
}


# layout option 
# 1. bsp: defautl layout, window resize when you create a new window.
# 2. stack: windows are maximized and overlapped
setup_space 1 references
setup_space 2 workbench
setup_space 3 favorite
yabai -m config --space 3 layout stack

setup_space 4 messgaes
yabai -m config --space 4 layout stack

setup_space 5 tasks
setup_space 6 misc

# NOTE: If you put “^” before space number, the space will be focused after application is started
# space 3 favorite
yabai -m rule --add app="^(draw.io|ChatGPT|Notion)$" space=^3
yabai -m rule --add title="(~/Library/Mobile Documents/com~apple~CloudDocs/Dendron/Dendron-vault-main-20220309/dendron.code-workspace - vscode)" space=^3
yabai -m rule --add title="(~/HH-workspace/dotfile - vscode)" space=^3

# space 4 messages
yabai -m rule --add app="^(QQ|Telegram|Mail|Discord|WeChat|Slack)$" space=^4
# space 5 tasks
yabai -m rule --add app="^(Things)$" space=^5
# space 6 misc
yabai -m rule --add app="^(Motrix)$" space=^6


echo "yabai configuration loaded.."